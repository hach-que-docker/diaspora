#!/bin/bash

# Create configuration based on domain name
DOMAIN_NAME=$(cat /config/domain_name)
USES_SSL=0
if [ -e /config/cert.pem ]; then
    if [ -e /config/cert.key ]; then
        echo "Enabling SSL due to presence of certificates!"
        USES_SSL=1
    fi
fi

if [ $USES_SSL -eq 1 ]; then
  cat >/etc/nginx/nginx.conf <<EOF
worker_processes 1;
error_log  /var/log/nginx/error.log;
events { worker_connections  256; }

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  keepalive_timeout 15;
  client_max_body_size 5m;

  passenger_root /usr/lib64/ruby/gems/2.0.0/gems/passenger-4.0.18;
  passenger_ruby /usr/bin/ruby;

  server {
    listen 80;
    rewrite ^/(.*) https://$DOMAIN_NAME/\$1 permanent;
  }

  upstream thin_cluster {
    server localhost:3000;
  }

  server {
    listen 443 ssl;

    ssl on;
    ssl_certificate      /etc/ssl/certs/server.crt;
    ssl_certificate_key  /etc/ssl/certs/server.key;

    passenger_enabled on;
    rails_env production;

    root /srv/diaspora/diaspora/public;

    error_log  /var/log/nginx/diaspora.error-ssl.log;
    access_log /var/log/nginx/diaspora.access-ssl.log;

    error_page 500 502 503 504 /50x.html;
    location = /50x.html { root html; }

    location /uploads/images {
      expires 1d;
      add_header Cache-Control public;
    }

    location /assets {
      expires 1d;
      add_header Cache-Control public;
    }
  }
}
EOF
else
  cat >/etc/nginx/nginx.conf <<EOF
worker_processes 1;
pid        /run/nginx.pid;
error_log  /var/log/nginx/error.log;
events { worker_connections  256; }

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  keepalive_timeout 15;
  client_max_body_size 5m;

  passenger_root /usr/lib64/ruby/gems/2.0.0/gems/passenger-4.0.18;
  passenger_ruby /usr/bin/ruby;

  upstream thin_cluster {
    server localhost:3000;
  }

  server {
    listen 80;

    passenger_enabled on;
    rails_env production;

    root /srv/diaspora/diaspora/public;

    error_log  /var/log/nginx/diaspora.error.log;
    access_log /var/log/nginx/diaspora.access.log;

    error_page 500 502 503 504 /50x.html;
    location = /50x.html { root html; }

    location /uploads/images {
      expires 1d;
      add_header Cache-Control public;
    }

    location /assets {
      expires 1d;
      add_header Cache-Control public;
    }
  }
}
EOF
fi

# Check syntax
/usr/sbin/nginx -t
if [ $? -ne 0 ]; then
    echo "Nginx syntax check fail"
    exit 1
fi

# Run Nginx
/usr/sbin/nginx

# Wait for /run/nginx.pid to appear and copy it.
while [ ! -e /run/nginx.pid ]; do
  echo "Waiting for /run/nginx.pid to appear..."
  sleep 1
done
cp /run/nginx.pid /run/watch/nginx

